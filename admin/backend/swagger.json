{
  "openapi": "3.0.0",
  "info": {
    "title": "Weduca Admin Portal API",
    "description": "API documentation for the Weduca student application management system",
    "version": "1.0.0",
    "contact": {
      "name": "Weduca Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Applications",
      "description": "Application management endpoints"
    },
    {
      "name": "Students",
      "description": "Student management endpoints"
    },
    {
      "name": "Institutions",
      "description": "Institution management endpoints"
    },
    {
      "name": "Documents",
      "description": "Document upload and management endpoints"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login to get access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new admin user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input or email already exists"
          }
        }
      }
    },
    "/api/students": {
      "get": {
        "tags": ["Students"],
        "summary": "Get all students with pagination",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of students",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "students": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Student"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Students"],
        "summary": "Create a new student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully"
          }
        }
      }
    },
    "/api/students/{id}": {
      "get": {
        "tags": ["Students"],
        "summary": "Get student by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Students"],
        "summary": "Update student",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Students"],
        "summary": "Delete student",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully"
          }
        }
      }
    },
    "/api/institutions": {
      "get": {
        "tags": ["Institutions"],
        "summary": "Get all institutions",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of institutions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "institutions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Institution"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Institutions"],
        "summary": "Create a new institution",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Institution created successfully"
          }
        }
      }
    },
    "/api/institutions/{id}": {
      "get": {
        "tags": ["Institutions"],
        "summary": "Get institution by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Institution details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Institution"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Institutions"],
        "summary": "Update institution",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Institution updated successfully"
          }
        }
      }
    },
    "/api/applications/stats": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get application statistics",
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "schema": {
              "type": "string",
              "enum": ["all", "month", "year"]
            }
          },
          {
            "in": "query",
            "name": "institution",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationStats"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "staff"]
          }
        }
      },
      "UserInput": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "password"],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "role": {
            "type": "string",
            "enum": ["admin", "staff"]
          }
        }
      },
      "StudentInput": {
        "type": "object",
        "required": ["firstName", "lastName", "email"],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              }
            }
          }
        }
      },
      "InstitutionInput": {
        "type": "object",
        "required": ["name", "country"],
        "properties": {
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string",
            "format": "email"
          },
          "contactPhone": {
            "type": "string"
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApplicationStats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "approved": {
            "type": "integer"
          },
          "rejected": {
            "type": "integer"
          },
          "pending": {
            "type": "integer"
          },
          "under_review": {
            "type": "integer"
          },
          "withdrawn": {
            "type": "integer"
          },
          "successRate": {
            "type": "object",
            "properties": {
              "overall": {
                "type": "number"
              },
              "processed": {
                "type": "number"
              }
            }
          },
          "trendingPrograms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          },
          "averageProcessingDays": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
} 